openapi: '3.0.3'
info:
  title: 'Demo School Management Apis'
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: Development server
security:
  - bearerAuth: [ ]
paths:
  /actuator/health:
    get:
      description: Get health status of backend service
      operationId: actuatorHealth
      security: []
      tags:
        - 'actuator'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponseDto'
  /api/v1/hello/teacher:
    get:
      description: sayHelloTeacher
      operationId: sayHelloTeacher
      tags:
        - 'hello-v1'
      responses:
        400:
          description: Bad request
        404:
          description: Resource not found
        417:
          description: Failed to upload attachments
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /api/v1/hello/student:
    get:
      description: sayHelloStudent
      operationId: sayHelloStudent
      tags:
        - 'hello-v1'
      responses:
        400:
          description: Bad request
        404:
          description: Resource not found
        417:
          description: Failed to upload attachments
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /api/v1/auth:
    post:
      description: auth
      operationId: doAuthenticate
      tags:
        - 'auth-v1'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
      responses:
        400:
          description: Bad request
        404:
          description: Resource not found
        417:
          description: Failed to upload attachments
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
  /api/v1/auth/register:
    post:
      description: do register
      operationId: doRegister
      tags:
        - 'auth-v1'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
      responses:
        400:
          description: Bad request
        404:
          description: Resource not found
        417:
          description: Failed to upload attachments
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'

  /api/v1/user:
    get:
      description: get users by criteria
      operationId: getUserByCriteria
      tags:
        - 'user-v1'
      parameters:
        - name: criteria
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/UserCriteria'
        - $ref: '#/components/parameters/pageable'
      responses:
        400:
          description: Bad request
        404:
          description: Resource not found
        417:
          description: Failed to upload attachments
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponsePaginatedDTO'
  /api/v1/user/assign-role:
    post:
      description: do assign role for user
      operationId: assignRoleUsingPost
      tags:
        - 'user-v1'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentRequest'
      responses:
        400:
          description: Bad request
        404:
          description: Resource not found
        417:
          description: Failed to upload attachments
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
  /api/v1/question:
    get:
      description: get question by criteria
      operationId: getQuestionByCriteria
      tags:
        - 'question-v1'
      parameters:
        - name: criteria
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/QuestionCriteria'
        - $ref: '#/components/parameters/pageable'
      responses:
        400:
          description: Bad request
        404:
          description: Resource not found
        417:
          description: Failed to upload attachments
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponsePaginatedDTO'
    post:
      description: create question
      operationId: createQuestionUsingPost
      tags:
        - 'question-v1'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionRequestDTO'
      responses:
        400:
          description: Bad request
        404:
          description: Resource not found
        417:
          description: Failed to upload attachments
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponseDTO'
  /api/v1/examination:
    get:
      description: get examination by criteria
      operationId: getExaminationByCriteria
      tags:
        - 'examination-v1'
      parameters:
        - name: criteria
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ExaminationCriteria'
        - $ref: '#/components/parameters/pageable'
      responses:
        400:
          description: Bad request
        404:
          description: Resource not found
        417:
          description: Failed to upload attachments
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExaminationResponsePaginatedDTO'
    post:
      description: create examination
      operationId: createExaminationUsingPost
      tags:
        - 'examination-v1'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExaminationRequestDTO'
      responses:
        400:
          description: Bad request
        404:
          description: Resource not found
        417:
          description: Failed to upload attachments
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExaminationResponseDTO'
  /api/v1/examination/assign:
    post:
      description: assign examination for students
      operationId: assignExaminationForStudent
      tags:
        - 'examination-v1'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExaminationAssignmentRequestDTO'
      responses:
        400:
          description: Bad request
        404:
          description: Resource not found
        417:
          description: Failed to upload attachments
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExaminationAssignmentResponseDTO'
  /api/v1/examination/fetch: # role student only return examination with non-correctAnswer's question, otherwise teacher.
    get:
      description: student fetch their assign's examination
      operationId: fetchExaminationNonCorrectAnswerUsingGet
      tags:
        - 'examination-v1'
      parameters:
        - $ref: '#/components/parameters/pageable'
      responses:
        400:
          description: Bad request
        404:
          description: Resource not found
        417:
          description: Failed to upload attachments
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExaminationStudentResponsePaginatedDTO'
  /api/v1/examination/{id}/start:
    post:
      description: student start a examination
      operationId: startExamination
      tags:
        - 'examination-v1'
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        400:
          description: Bad request
        404:
          description: Resource not found
        417:
          description: Failed to upload attachments
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExaminationWithoutAnswerResponseDTO'
  /api/v1/examination/{id}/submit:
    post:
      description: student submit a examination
      operationId: submitExamination
      tags:
        - 'examination-v1'
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SubmitExaminationRequestDTO'
      responses:
        400:
          description: Bad request
        404:
          description: Resource not found
        417:
          description: Failed to upload attachments
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitExaminationResponseDTO'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64
    pageable:
      name: pageable
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/Pageable'

  schemas:
    RestResponse:
      title: RestResponse
      type: object
      properties:
        correlationId:
          type: string
        errorCode:
          type: string
        pagination:
          $ref: '#/components/schemas/Pagination'
        succeeded:
          type: boolean
    Pagination:
      title: Pagination
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalItem:
          type: integer
          format: int64
    Pageable:
      type: object
      description: This object will be overridden by Spring's Pageable
      properties:
        page:
          type: integer
          default: 0
        size:
          type: integer
          default: 10
        sort:
          type: array
          items:
            type: string
          example: createdAt,DESC
    HealthResponseDto:
      type: object
      properties:
        status:
          type: string
    AuthenticationRequest:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        role:
          $ref: "#/components/schemas/Role"
        password:
          type: string
    UserResponsePaginatedDTO:
      type: object
      allOf:
        - $ref: '#/components/schemas/RestResponse'
        - type: object
          properties:
            payload:
              type: array
              items:
                $ref: "#/components/schemas/UserResponseDTO"
    UserResponseDTO:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseDTO"
        - $ref: "#/components/schemas/UserBaseDTO"
    UserBaseDTO:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        role:
          $ref: "#/components/schemas/Role"
    UserCriteria:
      type: object
      properties:
        firstname:
          type: array
          items:
            type: string
        lastname:
          type: array
          items:
            type: string
        email:
          type: array
          items:
            type: string
        role:
          type: array
          items:
            $ref: "#/components/schemas/Role"
    AuthenticationResponse:
      type: object
      properties:
        token:
          type: string
    RoleAssignmentRequest:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        role:
          $ref: "#/components/schemas/Role"
    Role:
      type: string
      enum:
        - TEACHER
        - STUDENT

    IdWrapperDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
    BaseDTO:
      type: object
      allOf:
        - $ref: "#/components/schemas/IdWrapperDTO"
    QuestionNonCorrectAnswerBaseDTO:
      type: object
      properties:
        clause:
          type: string
        answerA:
          type: string
        answerB:
          type: string
        answerC:
          type: string
        answerD:
          type: string
    QuestionBaseDTO:
      type: object
      allOf:
        - $ref: "#/components/schemas/QuestionNonCorrectAnswerBaseDTO"
        - type: object
          properties:
            correctAnswer:
              type: integer
              format: int32
              minimum: 0
              maximum: 3
    QuestionResponsePaginatedDTO:
      type: object
      allOf:
        - $ref: '#/components/schemas/RestResponse'
        - type: object
          properties:
            payload:
              type: array
              items:
                $ref: "#/components/schemas/QuestionResponseDTO"
    QuestionRequestDTO:
      type: object
      allOf:
        - $ref: "#/components/schemas/QuestionBaseDTO"
    QuestionResponseDTO:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseDTO"
        - $ref: "#/components/schemas/QuestionBaseDTO"
    QuestionNonCorrectAnswerResponseDTO:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseDTO"
        - $ref: "#/components/schemas/QuestionNonCorrectAnswerBaseDTO"
    QuestionCriteria:
      type: object
      properties:
        id:
          type: array
          items:
            type: integer
            format: int64
        clause:
          type: array
          items:
            type: string
        correctAnswer:
          type: array
          items:
            type: integer
            format: int32
            minimum: 0
            maximum: 3
        createdBy:
          type: array
          items:
            type: string

    ExaminationBaseDTO:
      type: object
      properties:
        title:
          type: string
        durationInMinute:
          type: integer
          format: int32

    ExaminationRequestDTO:
      type: object
      allOf:
        - $ref: "#/components/schemas/ExaminationBaseDTO"
        - type: object
          properties:
            questions:
              type: array
              items:
                $ref: "#/components/schemas/IdWrapperDTO"
    ExaminationResponseDTO:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseDTO"
        - $ref: "#/components/schemas/ExaminationBaseDTO"
        - type: object
          properties:
            questions:
              type: array
              items:
                $ref: "#/components/schemas/QuestionResponseDTO"
    ExaminationWithoutAnswerResponseDTO:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseDTO"
        - $ref: "#/components/schemas/ExaminationBaseDTO"
        - type: object
          properties:
            status:
              type: string
            questions:
              type: array
              items:
                $ref: "#/components/schemas/QuestionNonCorrectAnswerResponseDTO"
    ExaminationCriteria:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        durationInMinute:
          type: integer
          format: int32
    ExaminationResponsePaginatedDTO:
      type: object
      allOf:
        - $ref: '#/components/schemas/RestResponse'
        - type: object
          properties:
            payload:
              type: array
              items:
                $ref: "#/components/schemas/ExaminationResponseDTO"

    ExaminationAssignmentRequestDTO:
      type: object
      properties:
        examinationId:
          type: integer
          format: int64
        students:
          type: array
          items:
            $ref: "#/components/schemas/IdWrapperDTO"
    ExaminationAssignmentResponseDTO:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseDTO"
        - type: object
          properties:
            examination:
              $ref: "#/components/schemas/ExaminationResponseDTO"
            students:
              type: array
              items:
                $ref: "#/components/schemas/UserResponseDTO"

    ExaminationStudentResponsePaginatedDTO:
      type: object
      allOf:
        - $ref: '#/components/schemas/RestResponse'
        - type: object
          properties:
            payload:
              type: array
              items:
                $ref: "#/components/schemas/ExaminationWithoutAnswerResponseDTO"
    SubmitExaminationRequestDTO:
      type: object
      properties:
        questionId:
          type: integer
          format: int64
        answer:
          type: integer
          format: int32
    SubmitExaminationResponseDTO:
      type: object
      properties:
        score:
          type: number